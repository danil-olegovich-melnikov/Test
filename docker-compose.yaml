version: "3"

services:
  redis:
    image: redis:alpine

  database:
    container_name: 'postgres'
    image: postgres
    ports:
      - '5433:5432'
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  backend:
    container_name: backend
    build:
      context: ./django
      dockerfile: Dockerfile
    volumes:
      - ./django:/app/django
      - static_volume:/app/django/static
    ports:
      - "8000:8000"
    depends_on:
      - database
    environment:
      PYTHONUNBUFFERED: 1

  celery:
    build: ./django
    command: celery -A config worker --loglevel=INFO
    volumes:
      - ./django:/app/django
    environment:
      DB_HOST: postgres
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASS: postgres
      PYTHONUNBUFFERED: 1
    depends_on:
      - redis
      - backend

  celery_beat:
    build: ./django
    command: celery -A config beat -l info
    volumes:
      - ./django:/app/django
    environment:
      DB_HOST: postgres
      DB_NAME: postgres
      DB_USER: postgres
      DB_PASS: postgres
      PYTHONUNBUFFERED: 1
    depends_on:
      - database
      - redis
      - backend

  frontend:
    container_name: frontend
    build:
      context: ./react_app
      dockerfile: Dockerfile
    volumes:
      - './react_app:/app/react_app'
      - '/app/react_app/node_modules'
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  static_volume:
  media_volume:
